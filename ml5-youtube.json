{"libs":[{"name":"jQuery 3","src":"@extension@jquery.min.js"},{"name":"p5","src":"https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.0.0/p5.min.js"},{"name":"ml5","src":"https://unpkg.com/ml5@latest/dist/ml5.min.js"}],"settings":{"badgeCounter":false,"editorConfig":{"enableBasicAutocompletion":false,"enableLiveAutocompletion":true,"enableSnippets":true,"fontSize":15,"highlightActiveLine":false,"keyboardHandler":false,"showPrintMargin":false,"tabSize":4,"theme":"ace/theme/tomorrow","useSoftTabs":false,"useWorker":true,"wrap":true},"supportBtn":false,"themesFolder":["chrome","clouds","dawn","dracula","dreamweaver","eclipse","github","monokai","solarized_dark","solarized_light","textmate","tomorrow","tomorrow_night","twilight"],"version":8},"sites":[{"compiledCss":".video-stream {position: relative!important;}.p5-canvas-ml5 {position: absolute!important; z-index: 10000!important;}","css":".video-stream{\n\tposition: relative; !important\n}\n.p5-canvas-ml5{\n\tposition: absolute;\n\tz-index: 10000;\n}","id":"https://www.youtube.com","js":"// logo\n\nconst ML5State = ()=>{\n\n\tconst stateId = \"ml5-state\"\n\t$(\"#end\").prepend(`<div id=\"${stateId}\" class=\"style-scope ytd-masthead\"></div>`)\n\tconst $state = $(\"#\"+stateId)\n\treturn {\n\t\t/*\n\t\t*@param {Boolean} ready\n\t\t*@return void\n\t\t*/\n\t\tcheckState:function(ready){\n\t\t\t$state.text(ready?\"ML5 on\":\"ML5 off\")\n\t\t\t$state.css(\"color\", ready? \"#6aa84f\":\"#eab9ac\")\n\t\t},\n\t}\n}\n// initiate activation ml5state as global var\nconst ml5state = ML5State()\n// start with false state on page load\nml5state.checkState(false)\n// main process\nconst runMl5VideoObjectDetector = ()=>{\n    // config\n    const VIDEO_Y_NORMALIZER = 0.55\n    // const VIDEO_X_NORMALIZER = 1.07\n\tconst VIDEO_HEIGHT_NORMALIZER = 0.57\n\t// @type { \"id\" | \"class\" }\n\tconst VIDEO_CONTAINER_TYPE = \"class\"\n\t// id or class name of the video target\n\tconst VIDEO_CONTAINER_TARGET = \"video-stream\" // youtube unique class to the video tag\n\t// refresh rate\n\tconst REFRESH_RATE = 14 // ms\n\t// show confidence score\n\tconst SHOW_CONFIDENCE_SCORE = false\n\t\n\tconst isInCorrectRoute = ()=>{\n\t\t  return String(window.location.search).includes(\"v=\")\n\t}\n\t\n\t// check if is in correct route, if, call self again with settimout\n\tif(!isInCorrectRoute()) return setTimeout(runMl5VideoObjectDetector, 300);\n\t// set and load model for ml5\n\tlet objectDetector = ml5.objectDetector('cocossd', {}, ()=>{\n\t\tconsole.log(\"model load completed\")\n\t})\n\n\tconst setup = function (ref){\n\t\treturn function(p){\n\t\t  p.setup = function() {\n\t\t    p.createCanvas(ref.width, ref.height)\n\t\t     .addClass(\"p5-canvas-ml5\")\n\t\t  }\n\t\t}\n\t}\n\n\tconst draw = (p5, data, width, height, videoWidth, videoHeight) => {\n\t\t\tif(!data) return\n\t\t\t// config\n\t\t    const textYOffset = 5\n\t\t    const labelAreaYOffset = textYOffset * 4.0\n\t\t    const fontSize = 13\n\t\t    // clear canvas\n\t\t    p5.clear()\n\t\t    p5.resizeCanvas(width, height)\n    \t\tdata.forEach(object => {\n\t\t\t  const widthRatio = width / videoWidth\n\t\t\t  const heighRatio = height / videoHeight\n    \t\t  object.x = object.x * widthRatio\n    \t\t  object.y = object.y * heighRatio * VIDEO_Y_NORMALIZER\n    \t\t  object.width = object.width * widthRatio\n    \t\t  object.height = object.height * heighRatio * VIDEO_HEIGHT_NORMALIZER\n\t\t      // rectangle\n\t\t      p5.noFill()\n\t\t      p5.stroke(0,100,0)\n\t\t      p5.rect(object.x, object.y, object.width, object.height);\n\t\t      // // label-area\n\t\t      p5.fill(10,50, 10, 100)\n\t\t      p5.stroke(0,100,0)\n\t\t      p5.rect(object.x , object.y - labelAreaYOffset, object.width, fontSize * 1.6);\n\t\t      // label-text\n\t\t      p5.noStroke();\n\t\t      p5.fill(1, 255, 32);\n\t\t      p5.textSize(fontSize);\n\t\t\t  const getText = ()=>{\n\t\t\t  \tlet {label, confidence} = object\n\t\t\t  \tif(SHOW_CONFIDENCE_SCORE) return `${label} (${confidence})`\n\t\t\t  \treturn label\n\t\t\t  }\n\t\t      p5.text( getText() , object.x + 3, object.y - textYOffset);\n    \t\t})\n\t}\n\t// config\n\ttry{\n\n\t\t//\n\t\tconst getUniqueClassRef = (ref)=>{\n\t\t\tif(ref.length === 0){\n\t\t\t\tthrow new Error(`Target class \"${VIDEO_CONTAINER_TARGET}\" not found`)\n\t\t\t}\n\t\t\tif(ref.length > 1){\n\t\t\t\tthrow new Error(`Target class \"${VIDEO_CONTAINER_TARGET}\" is more than one(1)`)\n\t\t\t}\n\t\t\treturn ref[0]\n\t\t}\n\t\tconst getWidthHeightFromStyle = (ref)=>{\n\t\t\tconst {width, height} = ref.style\n\t\t\t\n\t\t\treturn {\n\t\t\t\twidth: parseInt(width.replace(\"px\",\"\")),\n\t\t\t\theight: parseInt(width.replace(\"px\",\"\"))\n\t\t\t}\n\t\t}\n\t\t// target ref\n\t\tlet TARGET_CONTAINER_REF = \n\t\t\tVIDEO_CONTAINER_TYPE === \"id\" \n\t\t\t\t? document.getElementById(VIDEO_CONTAINER_TARGET)\n\t\t\t\t: getUniqueClassRef(document.getElementsByClassName(VIDEO_CONTAINER_TARGET))\n\t\n\t\tlet videoIsLoaded = false\n\t\tlet videoIsSeeking = false\n\t\tlet isNotOnCurrentTab = false\n\t\tlet currentCanvasWidth = 0\n\t\tlet currentCanvasHeight = 0\n\t\t\n\t\tlet videoWidth = 0\n\t\tlet videoHeight = 0\n\t\t// create p5 instance and setup canvas\n\t\tconst mlp5 = new p5(setup(TARGET_CONTAINER_REF), TARGET_CONTAINER_REF.parentElement)\n\t\t// update canvas size helper\n\t\tconst updateCanvasSize = ()=>{\n\t\t\t\tconst {width,height} = getWidthHeightFromStyle(TARGET_CONTAINER_REF)\n\t\t\t\t// store width and height to variable\n\t\t\t\tcurrentCanvasWidth = width\n\t\t\t\tcurrentCanvasHeight = height\n\t\t\t\t// update width and height to video tag\n\t\t\t\tTARGET_CONTAINER_REF.width = width\n\t\t\t\tTARGET_CONTAINER_REF.height = height\n\t\t\t\t// resize canvas\n\t\t\t    mlp5.resizeCanvas(width, height)\n\t\t}\n\t\t//\tbind-on resize\n\t\twindow.addEventListener('resize', updateCanvasSize)\n\t\t//  \n\t\tconst bodyRef = document.getElementsByTagName(\"html\")\n\t\tif(typeof bodyRef[0] !== \"undefined\"){\n\t\t\tbodyRef[0].addEventListener(\"mouseover\", ()=>{\n\t\t\t\tisNotOnCurrentTab = false\n\t\t\t\tml5state.checkState(true)\n\t\t\t});\n\t\t\tbodyRef[0].addEventListener(\"mouseout\", ()=>{\n\t\t\t\tisNotOnCurrentTab = true\n\t\t\t\tml5state.checkState(false)\n\t\t\t});\n\t\t}\n\t\t//\talso resize every second\n\t\tsetInterval(updateCanvasSize, 1000)\n\t\t//  listen when video meta data is loaded\n\t\tTARGET_CONTAINER_REF.addEventListener( \"loadstart\", function (e) {\n\t\t    videoIsLoaded = false\n\t\t}, false );\n\t\t//  listen when video meta data is loaded\n\t\tTARGET_CONTAINER_REF.addEventListener( \"loadedmetadata\", function (e) {\n\t\t    videoWidth = this.videoWidth\n\t\t    videoHeight = this.videoHeight\n\t\t}, false );\n\t\t//  listen when video is loaded\n\t\tTARGET_CONTAINER_REF.addEventListener( \"loadeddata\", function (e) {\n\t\t    videoIsLoaded = true\n\t\t}, false );\n\t\t// when change time of video\n\t\tTARGET_CONTAINER_REF.addEventListener( \"seeking\", function (e) {\n\t\t\tvideoIsSeeking = true\n\t\t}, false );\n\t\t// after video time change finished\n\t\tTARGET_CONTAINER_REF.addEventListener( \"seeked\", function (e) {\n\t\t\tvideoIsSeeking = false\n\t\t}, false );\n\t\t//  interprete video with ml5\n\t\tsetInterval(()=>{\n\t\t\t// break if not on current tab\n\t\t\tif(isNotOnCurrentTab) return\n\t\t\t// only call the function if is in correct route\n\t\t   if(isInCorrectRoute() && videoIsLoaded && !videoIsSeeking){\n\t\t \t  objectDetector.detect(TARGET_CONTAINER_REF, (err, results) => {\n\t\t\t   \t  // throw exception if error \n\t\t\t\t  if(err) return\n\t\t\t\t  // draw result to canvas with p5\n\t\t\t\t  draw(mlp5, results, currentCanvasWidth, currentCanvasHeight, videoWidth, videoHeight)\n\t\t\t\t  // update ml5 detection state\n\t\t\t\t  ml5state.checkState(true)\n\t\t\t   }).catch(err=>{\n\t\t\t   \t // skip expected error (when refresh rate is too fast, load data error will occured)\n\t\t\t   \t if(String(err.message).includes(\"loadeddata\")) return\n\t\t\t   \t console.log(err)\n\t\t\t   }); \n\t\t   }else{\n\t\t   \t  ml5state.checkState(false)\n\t\t   }\n\t\t}, REFRESH_RATE)\n\t}catch(err){\n\t\tif(err.message) alert(\"Error message from ml5-object-detector plugin:\\r\\n\" + err.message)\n\t\tconsole.log(err)\n\t}\t\n}\n\nrunMl5VideoObjectDetector()","libs":["jQuery 3","p5","ml5"],"name":"youtube-ml5-object-detector","options":{"altCSS":false,"altJS":true,"autoImportant":false,"on":true}}]}
